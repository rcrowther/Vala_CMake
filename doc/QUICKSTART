Quick(ish)start
===============

Beforehand
----------
The system needs 'cmake' installed. Recent packages will do fine, there is nothing progressive here.


Download
--------
Download from github, or clone using git,

  git clone https://github.com/rcrowther/Vala_CMake.git

This will give a folder of macros. There's no need for this to be in place, drop it where you usually put downloads (there's less purpose in cloning than usual, as the contents of the folder need to be distributed. To update needs another download, then to replace the files, though this is a simple job).


Source folder creation
----------------------
Create new folders in the source (or intended source),

  /cmake
  /build
  /vapi

The /vapi folder may not be needed for your project, but the provided example CMakeLists.txt file references it (if that annoys you, remove the references).


Place the macros
----------------
From the downloaded folder, copy the folder,

  vala

Paste into the 'vala' folder in source, so you have,

  src_root_directory/cmake/vala
 

Activate subdirectories
-----------------------
Go back to the downloaded folder, and into the /doc folder. Find, 

  CMakeLists.txt.subdirectory

rename as.

  CMakeLists.txt

and put a copy in every subdirectory with source files for the Vala build (not directories which do not contain code to be Vala compiled, such as /icons /doc etc.) e.g.

  src_root_directory/src/CMakeLists.txt
  src_root_directory/mySuperWidgets/CMakeLists.txt
  src_root_directory/mySuperWidgets/CMakeLists.txt
  ...


Copy in the main file
---------------------
Copy,

  CMakeLists.txt.fullexample

to the top level of source, and rename as,

  CMakeLists.txt



Rewrite the main file
---------------------
The file is heavily annotated about what needs to be done. But, quickly,

- Rename the project to a name of your choosing.
  Use a search and replace on 'projectName'

- Replace the binding lists with your choice
  The current settings are for a threaded Gtk project

- List the subdirectories you wish CMake to look at



Compile!
--------

  cd src_root_directory/build/

  cmake ..

  make

If you're in the middle of a project, perhaps you would like to see the valadoc, ::

  cmake --build . --target doc

on 'make' sytems, this will work too, ::

  make doc


Further Help
------------
If you need to tune the main file for different compilers, bindings, rejecting certain files, and so forth, there is a fairly extensive MANUAL in the docs folder. MANUAL seems a rather grand title, but there are a lot of options.
